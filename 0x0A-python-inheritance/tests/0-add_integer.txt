The "7-base_geometry" module

Import functions from module:
	>>> add_integer = __import__("7-base_geometry").add_integer

check for docstring:
	>>> doc = __import__("7-base_geometry").__doc__
	>>> len(doc) > 1
	True

check for docstring for funciton:
	>>> doc_fun = __import__("7-base_geometry").add_integer.__doc__
	>>> len(doc_fun) > 1
	True

check for addition:
	>>> add_integer(2,2)
	4

Checking positive with negative:
	 >>> add_integer(2, -2)
	 0

Checking 2 negative:
	 >>> add_integer(-2, -4)
	 -6

Checking positive with negative:
	 >>> add_integer(-1, 2)
	 1

Checking non-number with number:
	 >>> add_integer([2], 5)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Checking number with non-number:
	 >>> add_integer(10, "10")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Checking non-number with non-number:
	 >>> add_integer((2,), {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking number with bool:
	 >>> add_integer(10, False)
         Traceback (most recent call last):
         ...
         TypeError: b must be an integer

Checking no args:
	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

Checking one arg:
	 >>> add_integer(0)
	 Traceback (most recent call last):
         ...
	 TypeError: add_integer() missing 1 required positional argument: 'b'

Checking more than 2 args:
	 >>> add_integer(1, 2, 5)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes 2 positional arguments but 3 were given
